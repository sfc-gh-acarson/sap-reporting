name: deploy-qa

# Controls when the action will run. 
on:
  push:
    branches:
      - main
    paths:
      - 'deploy/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  #SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
  #SF_USERNAME: ${{ secrets.SF_USERNAME }}
  #SF_ROLE: ${{ secrets.SF_ROLE }}
  #SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
  #SF_DATABASE: ${{ secrets.SF_QA_DATABASE }}
  #SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
  SNOWSQL_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
  SNOWSQL_USER: ${{ secrets.SF_USERNAME }}
  SNOWSQL_PWD: ${{ secrets.SF_PASSWORD }}
  SNOWSQL_ROLE: ${{ secrets.SF_ROLE }}
  SNOWSQL_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}  
  SNOWSQL_DATABASE: ${{ secrets.SF_QA_DATABASE }}
jobs:
  deploy-snowflake-changes-job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@master
          
      - name: Download SnowSQL
        run:  curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash    
        
      - name: Install SnowSQL          
        run: SNOWSQL_DEST=~/snowflake SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash
        
      - name: Test installation
        run:  ~/snowflake/snowsql -v 

      # create backup objects
      - name: Execute Create Backups SQL Against Snowflake
        id: sql_execute_create_baks        
        run: ~/snowflake/snowsql -f deploy/00-back-ups.sql 
      
      
      - name: Execute Create New Objects SQL Against Snowflake
        id: sql_execute_create_new        
        run: ~/snowflake/snowsql -f deploy/01-objects.sql >> $GITHUB_OUTPUT       

      - name: Execute test
        id: sql_execute_create_test
        run: echo steps.sql_execute_test.outcome
      
      # create new objects
      #- name: Execute Create New Objects SQL Against Snowflake
      #  id: sql_execute_create_new        
      #  run: ~/snowflake/snowsql -f deploy/01-objects.sql        

      # run tests
      #- name: Execute Testing SQL Against Snowflake
      #  id: sql_execute_test       
      #  run: ~/snowflake/snowsql -f deploy/02-test.sql         

      # drop backups
      #- name: Execute Drop Backup SQL Against Snowflake
      #  if: steps.sql_execute_test.outcome == 'success' 
      #  id: sql_execute_clean       
      #  run: ~/snowflake/snowsql -f deploy/03-clean-backups.sql
      
      # revert
      #- name: Execute Revert SQL Against Snowflake
      #  if: steps.sql_execute_test.outcome != 'success' 
      #  id: sql_execute_revert       
      #  run: ~/snowflake/snowsql -f deploy/03-revert.sql        
